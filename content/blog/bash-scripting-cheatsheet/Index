---
title: "Bash Scripting Cheatsheet"
date: "2021-06-09"
description: 
---

#### Bash Scripting Cheatsheet

Here is a quick reference table for common commands.  Commands can be used in both a `bash` or `zsh` Mac OS terminal. If a file is prefixed with ./ this means we are referencing a file in the current directory.

#### Bash Commands

Basic Commands

| **Command**                 | **Use**                                      |
|:--------------------------- | -----------------------------------------------:|
| cd <file-name>| to change directory; navigate into a folder**|
| cd .. | change directory one level up; navigate back to prev. file/folder|
| cd                                     | return to home directory/folder|
| cd -                                               | change to last directory|
| pwd      |to find out where you are; print working directory|
| ls               |prints list of files in the current directory/folder|
| ls-a                  | prints file list; includes hidden files/folders|
| mkdir <folder-name>            	                 |creates folder|
| touch  <file-name>                                         |    creates file|
| rm <file-name>                                               |  deletes file*|
| rm - r  <folder-name>                             | deletes directory |
| cp [old] [new]                               | copy one file to another |
| mv <file.txt folder-name/>               | moves file into folder|
| open <file-name>            | opens file in default application|
| clear                                                            | Clears terminal|
| app -version  |                | Logs version # of app to terminal| 
| cal                                          | üçì     prints a small calendar|
------------------------------------------------------------------------- 
- *Note: for scripts that perform file actions you must cd into the file first then run your command
- **Note: the names directory and folder are inter-changeble
- / is your root directory/folder

#### Tilde
- The shell interprets the character ~ (tilde) at the start of a path to mean ‚Äúthe current user‚Äôs home directory‚Äù. For example, if Nia's home directory is /Users/nia, then ~/data is equivalent to /Users/nia/data.
  
#### Setting up .bash_profile  
-----------------------------------------
1. Open new terminal
2. Enter `ls -a`
3. This prints a list of files in your home folder; look for a .bash_profile file; if one does not exist we will create one next.
4. to create the file enter touch .bash_profile
5. to add alias or update your path see below.

#### Adding an alias   
-------------------------------

#### Path  
------------------------------
Files read by a new shell upon opening, listed in order:
- /etc/profile (exe automatically at login)
- .bash_profile
- ~.bash_login
- ~.profile
- ~/.bashrc

When adding files to your PATH:

##### Advanced Commands
---------------------------------------------------

| **Command**                 | **Use**                                      |
|:--------------------------- | -----------------------------------------------:|
| repl       |                      creates a Node.js REPL (see below)|
| grep - i | searches in files for text that matches a pattern; i is case insensitive|
| find | finds files with specific properties that match pattens|
|  *              | matches zero or more characters in a filename|
| ?                         | matches a single character in a filename|
| history                                     | displays recent commands|
| echo $HOME |                 displays path of home directory|
| echo $PATH |                                      displays current path|
| nano .bash_profile |navigate into nano; open ./bash_profile|
| source .bash_profile |                    sets new alias for profile|
| sort <file.txt>|  reads file; prints lines in alphabetical order|
| #!                      | shebang prefix; makes file an executable|
| bash <file-name>            | runs the commands saved in a file|
| which bash | prints where the bash interpreter is located prior to running a script | 

Example script file:
```bash
#!/usr/bin/env bash
#comments begin with #
# first line is sheBang, makes file executable

echo Hello world! # => Hello world!
```
Setting up a cron job on Mac OSX:
------------------------------------------------
- open your terminal
- navigate to home using cd~/ or cd
- this is Users/Amy for me
- type crontab -e
note: to check and see if you have a crontab file type crontab -l, navigate to that crontab file if you do, if you do not continue from step four
- Vi is the default text editor for cron, if your unfamiliar with the [vi](http://commandlinemac.blogspot.com/2008/12/vim.html) editor use the simple commands below or 
- type or paste the crontab file 
- press `esc` then type `:wq` to save and exit


- use the [Crontab Generator](https://crontab-generator.org/)

Vi operates by shifting to different `modes`, for example:
- to begin **writing text** after opening the file hit `esc` and then `i`.
- to begin **deleting text** type `x`, then press the `delete` key
- to **save and exit** press `esc` then :wq
- to **exit without saving** press `esc` then :q!
 For each task you must shift to the correct mode before doing so.

##### Vi Commands

| **Command**          | **Use**                                      |
|:--------------------------- | -----------------------------------------:|
| i                                   | insert mode; insert characters|
| x          |delete mode; deletes one character at a time|
| dw |                                      deletes word after cursor|
| Esc | exit insert mode; stop writing text to the file to prepare to save and exit|
| :wq                                             | write to file and quit|
| :q!                    | quit without saving changes and exit|
-------------------------------------------------------------------------






Resources. 
[Bash Hackers Wiki](https://wiki.bash-hackers.org/)
[Cronitor](https://crontab.guru/every-5-minutes)
[CoreNominal, How to Setup a Crontab file](https://corenominal.org/2016/05/12/howto-setup-a-crontab-file/)

